import com.android.ddmlib.DdmPreferences
import proguard.gradle.ProGuardTask

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'net.sf.proguard:proguard-gradle:6.0.3'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.getkeepsafe.dexcount'

apply from: "$rootDir/gradle/android.gradle"

android {
    defaultConfig {
        minSdkVersion 16
        testApplicationId 'test.com.github.tmurakami.dexopener'
        testInstrumentationRunner '.MyAndroidJUnitRunner'
        consumerProguardFile 'proguard-rules.pro'
    }
    lintOptions.disable 'InvalidPackage'
    testOptions.animationsDisabled true
    DdmPreferences.setTimeOut 60000
    // TODO replace with https://issuetracker.google.com/issues/72050365
    libraryVariants.all { it.generateBuildConfig.enabled = false }
}

configurations {
    retrolambda
    backport
    jarjar
    repackage
}

def backportDir = "$buildDir/tmp/backport"
def repackagedJar = "$buildDir/libs/repackaged.jar"

dependencies {
    retrolambda deps.retrolambda
    backport deps.dexlib2, {
        exclude group: 'com.beust', module: 'jcommander'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
        exclude group: 'com.google.guava', module: 'guava'
    }
    jarjar deps.jarjar
    repackage deps.guava
    repackage files(backportDir) { builtBy 'backportDependencies' }
    compileOnly deps.androidx.annotation
    implementation files(repackagedJar) { builtBy 'repackageDependencies' }
    testImplementation deps.junit
    testImplementation deps.mockito.core
    testImplementation deps.dexlib2
    androidTestImplementation deps.androidx.test.runner
}

task backportDependencies(type: JavaExec) {
    def jars = configurations.backport.files
    inputs.files jars
    outputs.dir backportDir
    classpath = configurations.retrolambda
    main = 'net.orfjackal.retrolambda.Main'
    jvmArgs = ["-Dretrolambda.inputDir=$backportDir", "-Dretrolambda.classpath=$backportDir"]
    doFirst {
        copy {
            jars.each { from zipTree(it) }
            into backportDir
        }
    }
}

task repackageDependencies(type: ProGuardTask) {
    outputs.file repackagedJar
    injars filter: '!AndroidManifest.xml,!META-INF/**', configurations.repackage
    outjars "$buildDir/tmp/repackage.tmp.jar"
    libraryjars project.android.bootClasspath
    configuration 'proguard-rules-repackage.pro'
    doLast {
        def rootPackage = "${project.group}.${project.name}.repackaged"
        ant {
            taskdef name: 'jarjar',
                    classname: 'org.pantsbuild.jarjar.JarJarTask',
                    classpath: configurations.jarjar.asPath
            jarjar(jarfile: repackagedJar) {
                outJarFiles.each { zipfileset src: it }
                rule pattern: 'com.github.tmurakami.classinjector.**', result: "$rootPackage.@0"
                rule pattern: 'com.google.common.**', result: "$rootPackage.@0"
                rule pattern: 'org.jf.**', result: "$rootPackage.@0"
            }
        }
        files(outJarFiles)*.delete()
    }
}

dexcount {
    includeClasses = true
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
    from android.sourceSets.main.resources.sourceFiles
}

javadoc {
    def missingPackageListDir = "$buildDir/tmp/javadoc/missing-package-list"
    doFirst {
        file(missingPackageListDir).mkdirs()
        file("$missingPackageListDir/package-list").text = 'android.support.test.runner\n'
    }
    options.linksOffline 'https://developer.android.com/reference/', missingPackageListDir
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

install {
    repositories.mavenInstaller {
        pom.project {
            url 'https://github.com/tmurakami/dexopener'
            inceptionYear '2016'
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
            developers {
                developer {
                    id 'tmurakami'
                    name 'Tsuyoshi Murakami'
                }
            }
            scm {
                url 'https://github.com/tmurakami/dexopener'
                connection 'scm:git:git://github.com/tmurakami/dexopener.git'
            }
        }
    }
}
