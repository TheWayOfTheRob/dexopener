buildscript {
    ext.versions = [kotlin: '1.3.10',
                    jacoco: '0.8.2',]
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.0-beta04'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.20.0'
        classpath 'pl.allegro.tech.build:axion-release-plugin:1.9.3'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.4'
    }
}

apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'pl.allegro.tech.build.axion-release'

scmVersion {
    tag {
        prefix = ''
    }
    hooks {
        pre 'fileUpdate', [file       : 'README.md',
                           pattern    : { v, p -> /([-\/:])$v([-\/'])/ },
                           replacement: { v, p -> "\$1$v\$2" }]
        pre 'commit', { v, p -> "Release version: $v [ci skip]" }
    }
}

allprojects {
    repositories {
        maven { url 'https://jitpack.io' }
        google()
        jcenter()
    }
}

subprojects {
    version = scmVersion.version
    group = 'com.github.tmurakami'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

dependencyUpdates.resolutionStrategy {
    componentSelection.all {
        if (candidate.version =~ /(?i)-(?:alpha|beta|rc)[-\d]?/) reject('Release candidate')
    }
}

ext {
    deps = [jarjar : 'org.pantsbuild:jarjar:1.7.2',
            dexlib2: 'org.smali:dexlib2:2.2.5',
            junit  : 'junit:junit:4.12',]

    deps.kotlin = [stdlib: "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}",]

    deps.androidx = [annotation: 'androidx.annotation:annotation:1.0.0',]

    def testVersion = '1.1.0'
    deps.androidx.test = [core  : 'androidx.test:core:1.0.0',
                          rules : "androidx.test:rules:$testVersion",
                          runner: "androidx.test:runner:$testVersion",]

    deps.android = [support: [annotation: 'com.android.support:support-annotations:28.0.0',
                              test      : [rules: 'com.android.support.test:rules:1.0.2',]]]

    def mockitoVersion = '2.23.4'
    deps.mockito = [core   : "org.mockito:mockito-core:$mockitoVersion",
                    android: "org.mockito:mockito-android:$mockitoVersion",]

    def dexmakerVersion = '2.19.1'
    deps.dexmaker = [mockito                : "com.linkedin.dexmaker:dexmaker-mockito:$dexmakerVersion",
                     mockito_inline_extended: "com.linkedin.dexmaker:dexmaker-mockito-inline-extended:$dexmakerVersion",]

    deps.mockk = [android: 'io.mockk:mockk-android:1.8.13.kotlin13',]
}
